
h1 {
  font-family: Helvetica, Arial;
  text-align: center;
}

/* Control Arrows Styles */
* {
  box-sizing: border-box;
}
*:before, *:after {
  box-sizing: border-box;
}

body {
  align-content: center;
  background: #ECE9E6;
  background: -webkit-linear-gradient(to left, #ECE9E6, #FFFFFF);
  background: linear-gradient(to left, #ECE9E6, #FFFFFF);
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  margin: 0;
  overflow: auto;
  padding: 0;
  width: 100%;
}


.arrow-key-container {
  display: inline-block;
  text-align: center;
  transform: translate3d(0, 0, 0);
}

.arrow-key {
  align-items: center;
  background: #ccc;
  border-radius: 6px;
  box-shadow: -1px 1px 0 #999, -2px 2px 0 #999, -3px 3px 0 #999, -4px 4px 0 #999;
  color: #fff;
  display: inline-flex;
  font-size: 25px;
  font-weight: bold;
  height: 45px;
  justify-content: center;
  margin: 5px;
  transform: translate3d(0, 0, 0);
  transition: box-shadow .1s linear, transform .1s linear;
  width: 45px;
}
.arrow-key:active, .arrow-key.press {
  box-shadow: 0px 0px 0 #999, 0px 0px 0 #999, 0px 0px 0 #999, -1px 1px 0 #999;
  transform: translate3d(-3px, 3px, 0);
}

.arrow-key:active {
  border-bottom-width: 4px;
  transform: translateY(4px);
  background: #2E84C4;
}

.arrow-key.left:before {
  content: "\2190";
}
.arrow-key.up:before {
  content: "\2191";
}
.arrow-key.down:before {
  content: "\2193";
}
.arrow-key.right:before {
  content: "\2192";
}




/* Styles For PeerTable and VideoStream */
.display {
  width: 100%;
  min-height: 400px;
  padding-bottom: 20px;
}

.control {
  width: 100%;
  padding-bottom: 20px;
}

.control-button {
  width: 100%;
  min-height: 50px;
}

.display-box {
  border: 2px solid black;
}

.title {
  vertical-align: top;
}

.standby {
  background-color: red;
}

.hidden {
  visibility: hidden;
}

.no-display {
  display: none;
}

.status {
  vertical-align: text-top;
  font-weight: bold;  
}

.message {
  overflow: auto;
}

.msg-time {
  color: blue;
}

.cueMsg {
  color: orange;
}

.selfMsg {
  color: green;
}

.peerMsg {
  color: red;
}

#angle, #order {
  background-color: rgb(241,239,237);
  font-weight: bold;
  padding: 3px;
  border-radius: 5px;
}


/* Video Streaming Styles */

.screenshot-image {
  width: 150px;
  height: 90px;
  border-radius: 4px;
  border: 2px solid whitesmoke;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);
  position: absolute;
  bottom: 5px;
  left: 10px;
  background: white;
}

.display-cover {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin: 2% auto;
  position: relative;
}

video {
  width: 100%;
  background: rgba(0, 0, 0, 0.2);
}

.rotation-wrapper-outer {
  display: table;
}

.rotation-wrapper-inner {
  padding: 50% 0;
  height: 0;
}

.element-to-rotate {
  display: block;
  transform-origin: top left;
  /* Note: for a CLOCKWISE rotation, use the commented-out
     transform instead of this one. */
  transform: rotate(-90deg) translate(-100%);
  /* transform: rotate(90deg) translate(0, -100%); */
  margin-top: -50%;

  /* Not vital, but possibly a good idea if the element you're rotating contains
     text and you want a single long vertical line of text and the pre-rotation
     width of your element is small enough that the text wraps: */
  white-space: nowrap;
  /* max-height: 400px; */
  max-width: 250px;
}

.streamCard {
  max-height: 320px;
}

.video-options {
  position: absolute;
  left: 20px;
  top: 30px;
}

.controls {
  position: absolute;
  right: 20px;
  top: 20px;
  display: flex;
}

.controls > button {
  width: 45px;
  height: 45px;
  text-align: center;
  border-radius: 100%;
  margin: 0 6px;
  background: transparent;
}

.controls > button:hover svg {
  color: white !important;
}

@media (min-width: 300px) and (max-width: 400px) {
  .controls {
    flex-direction: column;
  }

  .controls button {
    margin: 5px 0 !important;
  }
}

.controls > button > svg {
  height: 20px;
  width: 18px;
  text-align: center;
  margin: 0 auto;
  padding: 0;
}

.controls button:nth-child(1) {
  border: 2px solid #D2002E;
}

.controls button:nth-child(1) svg {
  color: #D2002E;
}

.controls button:nth-child(2) {
  border: 2px solid #008496;
}

.controls button:nth-child(2) svg {
  color: #008496;
}

.controls button:nth-child(3) {
  border: 2px solid #00B541;
}

.controls button:nth-child(3) svg {
  color: #00B541;
}

.controls > button {
  width: 45px;
  height: 45px;
  text-align: center;
  border-radius: 100%;
  margin: 0 6px;
  background: transparent;
}

.controls > button:hover svg {
  color: white;
}



/* Edit bootstrap classes */
